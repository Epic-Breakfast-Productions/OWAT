import java.text.SimpleDateFormat

/*
 * This build file configures the OWAT-app project.
 */
repositories {
	jcenter()
}
apply plugin: 'java'
apply plugin: 'application' // https://docs.gradle.org/current/userguide/application_plugin.html

//config for the application plugin
version="1.4.1"
mainClassName = "com.ebp.owat.app.Main"
applicationName = "OWAT-J"

// In this section you declare the dependencies for your production and test code
dependencies {
	compile project(":OWAT-lib")
	//logging dependencies
	compile 'org.apache.logging.log4j:log4j-slf4j-impl:2.+'
	compile 'org.apache.logging.log4j:log4j-api:2.+'
	compile 'org.apache.logging.log4j:log4j-core:2.+'
	compile 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2+'
	compile 'com.fasterxml.jackson.core:jackson-databind:2+'

	//for processing command line arguments
	compile 'args4j:args4j:2.33'
	compile 'args4j:args4j-site:2.33'

	//for the intellij swing forms
	compile 'com.intellij:forms_rt:7.0.3'

	//test dependencies
	testCompile 'junit:junit:4.12'
	testCompile 'com.google.guava:guava:23.6-jre'
}
run {
	/*
	 * So we can have arguments passed to the program in gradle
	 *
	 * Example of usage:
	 *      gradle :OWAT-app:run -PappArgs="['-g']"
	 */
	if (project.hasProperty("appArgs")) {
		args Eval.me(appArgs)
	}
}

test {
	dependsOn 'writeVersionConfig';
	dependsOn ':OWAT-lib:test';
}

assembleDist {
	dependsOn 'test';
}


String projectPropertiesFile = "project.properties";
String projectPropertiesDir = "$projectDir/src/main/resources/";

/**
 * Writes out the version configuration for the app.
 */
//noinspection GroovyAssignabilityCheck
task writeVersionConfig() {
	doLast {
		String versionNickname = "Lorem";
		String libVersion = project(":OWAT-lib").version;
		new File(projectPropertiesDir + projectPropertiesFile).text = """
################################################################
#                                                              #
# Main properties file. Contains values used in the app.       #
#                                                              #
# AUTOGENERATED BY GRADLE AT BUILD TIME. DO NOT EDIT THIS FILE #
#                                                              #
################################################################

# the name of the app
app.name = $applicationName
# the version of the app code
app.version = $version
# the time of build
app.buildtime: ${new SimpleDateFormat("dd-MM-yyyy HH:mm:ss").format(new Date())}
# convention for the nickname is to have something to do with example, nonsense, or random data
app.version.nickname = $versionNickname
lib.version = $libVersion
"""
		sleep((int)(0.25 * 1000));
	}
}

task deleteVersionConfig(type: Delete) {
	delete fileTree(projectPropertiesDir) {
		include "**/$projectPropertiesFile"
	}
}

compileJava {
	dependsOn 'writeVersionConfig';
}

clean {
	dependsOn 'deleteVersionConfig';
}
