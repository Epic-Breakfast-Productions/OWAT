/*
 * This build file configures the OWAT-app project.
 */
repositories {
	jcenter()
}
apply plugin: 'java'
apply plugin: 'application' // https://docs.gradle.org/current/userguide/application_plugin.html

//config for the application plugin
version="1.4.0"
mainClassName = "com.ebp.owat.app.Main"
applicationName = "owatj"

// In this section you declare the dependencies for your production and test code
dependencies {
	compile project(":OWAT-lib")
	//logging dependencies
	compile 'org.apache.logging.log4j:log4j-slf4j-impl:2.+'
	compile 'org.apache.logging.log4j:log4j-api:2.+'
	compile 'org.apache.logging.log4j:log4j-core:2.+'
	compile 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2+'
	compile 'com.fasterxml.jackson.core:jackson-databind:2+'

	//for processing command line arguments
	compile 'args4j:args4j:2.33'
	compile 'args4j:args4j-site:2.33'

	//for the intellij swing forms
	compile 'com.intellij:forms_rt:7.0.3'

	//test dependencies
	testCompile 'junit:junit:4.12'
	testCompile 'com.google.guava:guava:23.6-jre'
}
run {
	/*
	 * So we can have arguments passed to the program in gradle
	 *
	 * Example of usage:
	 *      gradle :OWAT-app:run -PappArgs="['-g']"
	 */
	if (project.hasProperty("appArgs")) {
		args Eval.me(appArgs)
	}
}

test {
	dependsOn ':OWAT-lib:test';
}

assembleDist {
	dependsOn 'test';
}
